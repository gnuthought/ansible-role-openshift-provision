# Process cluster_resources before processing other items, including projects.
# This allows items like cluster roles to be defined within cluster_resources.

- name: Handle cluster_resources
  include_tasks: resource.yml
  static: false
  with_items: "{{ openshift_cluster.cluster_resources | default([]) }}"
  vars:
    resource_path: "{{ openshift_cluster.resource_path | default(openshift_resource_path) }}"
    resource_entry: >-
      {% if resource_item is mapping %}{{
      resource_item
      }}{% elif resource_item is match('.*\.j2') %}{{
      lookup('template', lookup('first_found', {'files':resource_item, 'paths': resource_path})) | from_yaml
      }}{% else %}{{
      lookup('file', lookup('first_found', {'files':resource_item, 'paths': resource_path})) | from_yaml
      }}{% endif %}
  loop_control:
    loop_var: resource_item

- name: Handle cluster process_templates
  include_tasks: process-template.yml
  static: false
  with_items: "{{ openshift_cluster.process_templates | default([]) }}"
  loop_control:
    loop_var: template

- name: Handle persistent_volumes
  include_tasks: persistent-volume.yml
  with_items: "{{ openshift_cluster.persistent_volumes | default([]) }}"
  loop_control:
    loop_var: persistent_volume

- name: Handle groups
  include_tasks: group.yml
  with_items: "{{ openshift_cluster.groups | default([]) | union(user_groups | default([])) }}"
  loop_control:
    loop_var: group

- name: Handle cluster_role_bindings
  include_tasks: provision-cluster-roles.yml
  when: openshift_cluster.cluster_role_bindings is defined

- name: Handle deprecated cluster_resource_quotas
  include_tasks: cluster-resource-quota.yml
  with_items: "{{ openshift_cluster.cluster_resource_quotas | default([]) }}"
  loop_control:
    loop_var: cluster_resource_quota

- name: Handle projects
  include_tasks: project.yml
  with_items: "{{ openshift_cluster.projects | default([]) }}"
  loop_control:
    loop_var: project
  vars:
    cluster_resource_path: "{{ openshift_cluster.resource_path | default(openshift_resource_path) }}"

# Process resources after processing other items such as projects. This
# allows creation of resources in multiple projects in a specific order by
# specifying the namespace in the resource metadata.
- name: Handle cluster level resources
  include_tasks: resource.yml
  static: false
  with_items: "{{ openshift_cluster.resources | default([]) }}"
  vars:
    resource_path: "{{ openshift_cluster.resource_path | default(openshift_resource_path) }}"
    resource_entry: >-
      {% if resource_item is mapping %}{{
      resource_item
      }}{% elif resource_item is match('.*\.j2') %}{{
      lookup('template', lookup('first_found', {'files':resource_item, 'paths': resource_path})) | from_yaml
      }}{% else %}{{
      lookup('file', lookup('first_found', {'files':resource_item, 'paths': resource_path})) | from_yaml
      }}{% endif %}
  loop_control:
    loop_var: resource_item

- name: Fail for missing NFS persistent volume path
  fail: msg="NFS persistent volumes must have either nfs.path or nfs_path set"
  when: >
    ( persistent_volume.nfs_path is not defined or
      persistent_volume.nfs_path == '' ) and
    ( persistent_volume.nfs is not defined or
      persistent_volume.nfs.path is not defined or
      persistent_volume.nfs.path == '' )

- name: Fail for missing NFS persistent volume server
  fail: msg="NFS persistent volumes must have either nfs.server or nfs_server set"
  when: >
    ( persistent_volume.nfs_server is not defined or
      persistent_volume.nfs_server == '' ) and
    ( persistent_volume.nfs is not defined or
      persistent_volume.nfs.server is not defined or
      persistent_volume.nfs.server == '' )

- name: Determine if persistent volume {{ persistent_volume.name }} exists
  command: >
     {{ oc_cmd }} get pv {{ persistent_volume.name }} -o json
  register: get_pv
  failed_when: false
  check_mode: false
  changed_when: false

- name: Create persistent volume {{ persistent_volume.name }}
  when: get_pv.rc != 0
  shell: >
    echo {{ pvdef | to_json | quote }} |
    {{ oc_cmd }} create -f -
  vars:
    pvdef:
      apiVersion: v1
      kind: PersistentVolume
      metadata:
        name: "{{ persistent_volume.name }}"
        labels: "{{ persistent_volume.labels }}"
      spec:
        capacity:
          storage: "{% if persistent_volume.capacity | string is match('^[0-9]+$') %}{{ persistent_volume.capacity }}Gi{% else %}{{ persistent_volume.capacity }}{% endif %}"
        accessModes: "{{ persistent_volume.access_modes }}"
        persistentVolumeReclaimPolicy: "{{ persistent_volume.reclaim_policy | default('Retain') }}"
        nfs:
          path: "{% if persistent_volume.nfs is defined %}{{ persistent_volume.nfs.path }}{% else %}{{ persistent_volume.nfs_path }}{% endif %}"
          server: "{% if persistent_volume.nfs is defined %}{{ persistent_volume.nfs.server }}{% else %}{{ persistent_volume.nfs_server }}{% endif %}"

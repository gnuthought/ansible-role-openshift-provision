---
- name: Set Facts
  hosts: localhost
  connection: local
  vars_files:
  - login-creds.yml
  tasks:
  - include_tasks: setup-test.yml
  - set_fact:
      ignore_differences:
        metadata:
          annotations:
            kubectl.kubernetes.io/last-applied-configuration: ''
          creationTimestamp: null
          finalizers: null
        spec:
          persistentVolumeReclaimPolicy: ''

- name: Test Provision
  hosts: localhost
  connection: local
  vars:
    provision_persistentvolume: >-
      {{ lookup('template', 'resources/test-persistentvolume-minimal.yml.j2')
       | from_yaml }}
    persistent_volume_labels: {}

  roles:
  - role: openshift-provision

  tasks:
  - name: Provision PersistentVolume
    openshift_provision:
      connection: "{{ openshift_connection }}"
      resource: "{{ provision_persistentvolume }}"

  - name: Get PersistentVolume
    command: >-
      {{ test_oc_cmd }} export persistentvolume
      test-persistentvolume -o json
    register: get_persistentvolume
    changed_when: false

  - name: Verify PersistentVolume
    fail:
      msg: |
        PersistentVolume not defined as expected
        >>>
        {{ cmp_persistentvolume | to_yaml }}
        ===
        {{ got_persistentvolume | to_yaml }}
        <<<
    vars:
      got_persistentvolume: "{{ get_persistentvolume.stdout | from_json | combine(ignore_differences, recursive=True) }}"
      cmp_persistentvolume: "{{ provision_persistentvolume | combine(ignore_differences, recursive=True) }}"
    when: >-
      cmp_persistentvolume.metadata != got_persistentvolume.metadata or
      cmp_persistentvolume.spec != got_persistentvolume.spec

  - name: Check reprovision PersistentVolume
    openshift_provision:
      connection: "{{ openshift_connection }}"
      resource: "{{ provision_persistentvolume }}"
      fail_on_change: true
    register: reprovision_persistentvolume

  - fail:
      msg: Reprovision indicated change to PersistentVolume
    when: reprovision_persistentvolume.changed

- name: Test Update
  hosts: localhost
  connection: local
  vars:
    provision_persistentvolume: >-
      {{ lookup('template', 'resources/test-persistentvolume-minimal.yml.j2')
       | from_yaml }}
    persistent_volume_labels:
      testlabel: foo

  tasks:
  - name: Apply update to PersistentVolume
    openshift_provision:
      connection: "{{ openshift_connection }}"
      resource: "{{ provision_persistentvolume }}"

  - name: Get PersistentVolume
    command: >-
      {{ test_oc_cmd }} export persistentvolume
      test-persistentvolume -o json
    register: get_persistentvolume
    changed_when: false

  - name: Verify Update PersistentVolume
    fail:
      msg: |
        PersistentVolume not defined as expected
        >>>
        {{ cmp_persistentvolume | to_yaml }}
        ===
        {{ got_persistentvolume | to_yaml }}
        <<<
    vars:
      got_persistentvolume: "{{ get_persistentvolume.stdout | from_json | combine(ignore_differences, recursive=True) }}"
      cmp_persistentvolume: "{{ provision_persistentvolume | combine(ignore_differences, recursive=True) }}"
    when: >-
      cmp_persistentvolume.metadata != got_persistentvolume.metadata or
      cmp_persistentvolume.spec != got_persistentvolume.spec

- name: Test Delete
  hosts: localhost
  connection: local
  tasks:
  - name: Delete PersistentVolume
    openshift_provision:
      action: delete
      connection: "{{ openshift_connection }}"
      resource:
        kind: PersistentVolume
        metadata:
          name: test-persistentvolume

  - name: Verify PersistentVolume Delete
    command: >-
      {{ test_oc_cmd }} export persistentvolume
      test-persistentvolume -o json
    register: get_persistentvolume
    failed_when: get_persistentvolume.rc == 0
    changed_when: false

---
- name: Set Facts
  hosts: localhost
  connection: local
  vars_files:
  - login-creds.yml
  tasks:
  - include_tasks: setup-test.yml
  - set_fact:
      ignore_differences:
        metadata:
          annotations:
            kubectl.kubernetes.io/last-applied-configuration: ''
          creationTimestamp: null
          generation: 0
        spec:
          template:
            metadata:
              creationTimestamp: null

- name: Test Provision
  hosts: localhost
  connection: local
  vars:
    provision_replicationcontroller:
      apiVersion: v1
      kind: ReplicationController
      metadata:
        labels:
          provision-test: openshift-provision
        name: test-replicationcontroller
      spec:
        replicas: 1
        selector:
          replicationcontroller: test-replicationcontroller
        template:
          metadata:
            labels:
              replicationcontroller: test-replicationcontroller
              provision-test: "true"
          spec:
            containers:
            - image: registry.access.redhat.com/rhscl/httpd-24-rhel7:latest
              imagePullPolicy: IfNotPresent
              livenessProbe:
                failureThreshold: 3
                httpGet:
                  path: /
                  port: 8080
                  scheme: HTTP
                initialDelaySeconds: 30
                periodSeconds: 10
                successThreshold: 1
                timeoutSeconds: 3
              name: httpd-example
              readinessProbe:
                failureThreshold: 3
                httpGet:
                  path: /
                  port: 8080
                  scheme: HTTP
                initialDelaySeconds: 5
                periodSeconds: 15
                successThreshold: 2
                timeoutSeconds: 5
              resources:
                requests:
                  cpu: 100m
                  memory: 256Mi
              securityContext:
                privileged: false
              terminationMessagePath: /dev/termination-log
              terminationMessagePolicy: File
            dnsPolicy: ClusterFirst
            restartPolicy: Always
            schedulerName: default-scheduler
            securityContext: {}
            terminationGracePeriodSeconds: 30

  roles:
  - role: openshift-provision
    openshift_clusters:
    - projects:
      - name: provision-test

  tasks:
  - name: Provision ReplicationController
    openshift_provision:
      connection: "{{ openshift_connection }}"
      namespace: provision-test
      resource: "{{ provision_replicationcontroller }}"

  - name: Get ReplicationController
    command: >-
      {{ test_oc_cmd }} export replicationcontroller
      test-replicationcontroller -n provision-test -o json
    register: get_replicationcontroller
    changed_when: false

  - name: Verify ReplicationController
    fail:
      msg: |
        ReplicationController not defined as expected
        >>>
        {{ cmp_replicationcontroller | to_yaml }}
        ===
        {{ got_replicationcontroller | to_yaml }}
        <<<
    vars:
      got_replicationcontroller: "{{ get_replicationcontroller.stdout | from_json | combine(ignore_differences, recursive=True) }}"
      cmp_replicationcontroller: "{{ provision_replicationcontroller | combine(ignore_differences, recursive=True) }}"
    when: >-
      cmp_replicationcontroller.metadata != got_replicationcontroller.metadata or
      cmp_replicationcontroller.spec != got_replicationcontroller.spec

  - name: Check reprovision ReplicationController
    openshift_provision:
      connection: "{{ openshift_connection }}"
      namespace: provision-test
      resource: "{{ provision_replicationcontroller }}"
    register: reprovision_replicationcontroller

  - fail:
      msg: Reprovision indicated change to ReplicationController
    when: reprovision_replicationcontroller.changed

- name: Test Update
  hosts: localhost
  connection: local
  vars:
    provision_replicationcontroller:
      apiVersion: v1
      kind: ReplicationController
      metadata:
        labels:
          provision-test: openshift-provision
        name: test-replicationcontroller
      spec:
        replicas: 1
        selector:
          replicationcontroller: test-replicationcontroller
        template:
          metadata:
            labels:
              replicationcontroller: test-replicationcontroller
          spec:
            containers:
            - image: registry.access.redhat.com/rhscl/httpd-24-rhel7:latest
              imagePullPolicy: IfNotPresent
              livenessProbe:
                failureThreshold: 3
                httpGet:
                  path: /
                  port: 8080
                  scheme: HTTP
                initialDelaySeconds: 30
                periodSeconds: 10
                successThreshold: 1
                timeoutSeconds: 3
              name: httpd-example
              readinessProbe:
                failureThreshold: 3
                httpGet:
                  path: /
                  port: 8080
                  scheme: HTTP
                initialDelaySeconds: 3
                periodSeconds: 10
                successThreshold: 1
                timeoutSeconds: 3
              resources:
                requests:
                  cpu: 100m
                  memory: 256Mi
              securityContext:
                privileged: false
              terminationMessagePath: /dev/termination-log
              terminationMessagePolicy: File
            dnsPolicy: ClusterFirst
            restartPolicy: Always
            schedulerName: default-scheduler
            securityContext: {}
            terminationGracePeriodSeconds: 30

  tasks:
  - name: Apply update to ReplicationController
    openshift_provision:
      connection: "{{ openshift_connection }}"
      namespace: provision-test
      resource: "{{ provision_replicationcontroller }}"

  - name: Get ReplicationController
    command: >-
      {{ test_oc_cmd }} export replicationcontroller
      test-replicationcontroller -n provision-test -o json
    register: get_replicationcontroller
    changed_when: false

  - name: Verify Update ReplicationController
    fail:
      msg: |
        ReplicationController not defined as expected
        >>>
        {{ cmp_replicationcontroller | to_yaml }}
        ===
        {{ got_replicationcontroller | to_yaml }}
        <<<
    vars:
      got_replicationcontroller: "{{ get_replicationcontroller.stdout | from_json | combine(ignore_differences, recursive=True) }}"
      cmp_replicationcontroller: "{{ provision_replicationcontroller | combine(ignore_differences, recursive=True) }}"
    when: >-
      cmp_replicationcontroller.metadata != got_replicationcontroller.metadata or
      cmp_replicationcontroller.spec != got_replicationcontroller.spec

- name: Test Delete
  hosts: localhost
  connection: local
  vars:
    provision_replicationcontroller:
      apiVersion: extensions/v1beta1
      kind: ReplicationController
      metadata:
        name: test-replicationcontroller
  tasks:
  - name: Delete ReplicationController
    openshift_provision:
      action: delete
      namespace: provision-test
      connection: "{{ openshift_connection }}"
      resource: "{{ provision_replicationcontroller }}"

  - name: Verify ReplicationController Delete
    command: >-
      {{ test_oc_cmd }} export replicationcontroller
      test-replicationcontroller -n provision-test -o json
    register: get_replicationcontroller
    failed_when: get_replicationcontroller.rc == 0
    changed_when: false
